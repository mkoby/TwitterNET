<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/release/0.85/nant.xsd">
	<target name="compile-linux">
		<if test="${build.os == 'Unix'}"> <!-- Build on Linux -->
			  <exec program="${build.exe}"
				   commandline="&quot;/out:${dir.build}${file.sep}TwitterNET.dll&quot; 
						&quot;/r:System.dll&quot; &quot;/r:System.Core.dll&quot; 
						&quot;/r:System.Web.dll&quot; &quot;/r:System.Xml.Linq.dll&quot; 
						&quot;/r:System.Data.DataSetExtensions.dll&quot; 
						&quot;/r:System.Data.dll&quot; &quot;/r:System.Xml.dll&quot; 
						/noconfig /nologo /warn:4 /optimize- /codepage:utf8 
						/define:&quot;RELEASE&quot; /t:library 
						&quot;src/TwitterNET/Exceptions/TwitterNETWebException.cs&quot; 
						&quot;src/TwitterNET/ResponseParser.cs&quot; 
						&quot;src/TwitterNET/Properties/AssemblyInfo.cs&quot; 
						&quot;src/TwitterNET/RequestHandler.cs&quot; 
						&quot;src/TwitterNET/Twitter.cs&quot; 
						&quot;src/TwitterNET/User.cs&quot; 
						&quot;src/TwitterNET/RequestOptions.cs&quot; 
						&quot;src/TwitterNET/Interfaces/IUser.cs&quot; 
						&quot;src/TwitterNET/Exceptions/TwitterNetException.cs&quot; 
						&quot;src/TwitterNET/Message.cs&quot; 
						&quot;src/TwitterNET/StatusMessage.cs&quot; 
						&quot;src/TwitterNET/DirectMessage.cs&quot;" 
				   verbose="true"/>
				   
			  <exec program="${build.exe}" 
				   commandline="&quot;/out:${dir.build}${file.sep}TwitterNET_Tests.dll&quot; 
						&quot;/r:lib/nunit/bin/nunit.framework.dll&quot; 
						&quot;/r:System.dll&quot; &quot;/r:System.Core.dll&quot; 
						&quot;/r:System.Xml.Linq.dll&quot; 
						&quot;/r:System.Data.DataSetExtensions.dll&quot; 
						&quot;/r:System.Data.dll&quot; &quot;/r:System.Xml.dll&quot; 
						&quot;/r:src/TwitterNET/bin/Debug/TwitterNET.dll&quot; 
						/noconfig /nologo /warn:4 /optimize- /codepage:utf8 /define:&quot;RELEASE&quot; 
						/t:library 
						&quot;src/TwitterNET_Tests/TwitterNET_Friendship_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_FriendsTimeLine_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_Mentions_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_Notifications_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_SocialGraph_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/Properties/AssemblyInfo.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_UserTimeLine_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/RequestOptions_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_Favorites_Tests.cs&quot; 
						&quot;src/TwitterNET_Tests/TwitterNET_DirectMsgs_Tests.cs&quot;" 
				   verbose="true"/>
			 </if>
	</target>
	
	<target name="testing-linux">
		<if test="${build.os == 'Unix'}">
			<copy file="${dir.nunit}${file.sep}nunit.framework.dll" todir="${dir.build}" />
		</if>
		
		<if test="${build.os == 'Unix'}">
			<exec program="mono" commandline=" ${nunit.exe} ${dir.build}${file.sep}${assembly.unittests} -xml=${dir.build}${file.sep}TestResult.xml" 
				failonerror="false" verbose="true" />
		</if>
		
		<if test="${build.os == 'Unix'}">
			<style style="${nunit.xslt}" in="${dir.build}${file.sep}TestResult.xml" out="${dir.buildreports}${file.sep}NUnitReport.html" />
			<exec program="mono" 
	          commandline="${dir.nunit}${file.sep}nunit-summary.exe ${dir.build}${file.sep}TestResult.xml 
	               -o=${dir.buildreports}${file.sep}NUnitSummaryReport.html -html" verbose="true" />
		</if>
	</target>

</project>